<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: web | Personal blog of Quentin Rousseau]]></title>
  <link href="http://blog.quent.in/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://blog.quent.in/"/>
  <updated>2017-04-23T02:58:10-07:00</updated>
  <id>http://blog.quent.in/</id>
  <author>
    <name><![CDATA[Quentin Rousseau]]></name>
    <email><![CDATA[contact@quent.in]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PgBouncerHero - Dashboard for your PgBouncers]]></title>
    <link href="http://blog.quent.in/blog/2017/02/06/pgbouncerhero-dashboard-for-your-pgbouncers/"/>
    <updated>2017-02-06T09:00:00-08:00</updated>
    <id>http://blog.quent.in/blog/2017/02/06/pgbouncerhero-dashboard-for-your-pgbouncers</id>
    <content type="html"><![CDATA[<h2>Purpose</h2>

<p><a href="https://pgbouncer.github.io">PgBouncer</a> is a Lightweight connection pooler for PostgreSQL.</p>

<p>We love <a href="https://pgbouncer.github.io">PgBouncer</a> at <a href="https://www.instacart.com">Instacart</a> and we wanted to an easy way to
get some information from the special <a href="https://pgbouncer.github.io/usage.html">administration database</a> for all our
bouncers in a centralized interface.</p>

<h2>Introducing PgBouncerHero</h2>

<p><a href="https://pgbouncerhero-demo.herokuapp.com/"><img src="https://github.com/kwent/pgbouncerhero/blob/master/doc/screenshot-1.png?raw=true" alt="Screenshot1" /></a>
<a href="https://pgbouncerhero-demo.herokuapp.com/"><img src="https://github.com/kwent/pgbouncerhero/blob/master/doc/screenshot-2.png?raw=true" alt="Screenshot2" /></a>
<a href="https://pgbouncerhero-demo.herokuapp.com/"><img src="https://github.com/kwent/pgbouncerhero/blob/master/doc/screenshot-3.png?raw=true" alt="Screenshot2" /></a></p>

<h3>Installation</h3>

<p>PgBouncerHero is available as a Rails engine on <a href="https://github.com/kwent/pgbouncerhero">Github</a></p>

<p>A live demo is available on <a href="https://pgbouncerhero-demo.herokuapp.com">heroku</a> as well.</p>

<h2>More&hellip;</h2>

<ul>
<li><a href="https://pgbouncer.github.io">PgBouncer</a></li>
<li><a href="https://www.instacart.com">Instacart</a></li>
<li><a href="https://pgbouncer.github.io/usage.html">PgBouncer Usage</a></li>
<li><a href="https://github.com/kwent/pgbouncerhero">PgBouncerHero</a></li>
<li><a href="https://pgbouncerhero-demo.herokuapp.com">Heroku Demo App</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Real-time Logging for IronWorker with Logentries]]></title>
    <link href="http://blog.quent.in/blog/2014/05/27/real-time-logging-for-ironworker-with-logentries/"/>
    <updated>2014-05-27T23:15:42-07:00</updated>
    <id>http://blog.quent.in/blog/2014/05/27/real-time-logging-for-ironworker-with-logentries</id>
    <content type="html"><![CDATA[<h2>Purpose</h2>

<p>When you a executing a job with <a href="http://www.iron.io">Iron Worker Service</a> and writing logs on <code>STDOUT</code> you have
to wait that the job is terminated to read the log file. Not very convenient if
want to see your logs in real time right ?</p>

<p>Iron blog wrote a post about <a href="http://blog.iron.io/2013/07/real-time-logging-for-ironworker.html">how setup real time logging with papertrail</a>.</p>

<p>This post is how setup real time logging with <a href="https://logentries.com">logentries</a>.</p>

<h2>Logentries</h2>

<h3>Add a new logtype and select manual configuration</h3>

<p><img src="/assets/posts/2014-05-27-real-time-logging-for-ironworker-with-logentries/logentries-manual-configuration.png" alt="Logentries Manual Configuration" /></p>

<h3>Select Plain UDP/TCP log type</h3>

<p><img src="/assets/posts/2014-05-27-real-time-logging-for-ironworker-with-logentries/logentries-udp.png" alt="Logentries Manual Configuration UDP" /></p>

<h3>Copy/Paste the UDP or TCP port logentries just created for you</h3>

<p><img src="/assets/posts/2014-05-27-real-time-logging-for-ironworker-with-logentries/logentries-port.png" alt="Logentries Manual Configuration Port" /></p>

<h2>IronWorker</h2>

<h3>Go to your project settings and add <code>api.logentries.com</code> endpoint with the port specified above.</h3>

<p><img src="/assets/posts/2014-05-27-real-time-logging-for-ironworker-with-logentries/iron-udp.png" alt="IronWorker logs UDP configuration" /></p>

<h2>You are all set !</h2>

<p>It&rsquo;s time now to relaunch a job and see your logs in real time.</p>

<h2>More&hellip;</h2>

<ul>
<li><a href="http://www.iron.io">iron.io</a></li>
<li><a href="https://logentries.com">logentries.com</a></li>
<li><a href="https://logentries.com/doc/input-plaintcpudp">logentries.com doc | Plain TCP/UDP</a></li>
<li><a href="http://blog.iron.io/2013/07/real-time-logging-for-ironworker.html">real-time-logging-for-ironworker with papertrail</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twitter mention to url convertor plugin for Octopress]]></title>
    <link href="http://blog.quent.in/blog/2014/01/06/twitter-mention-to-url-convertor-plugin-for-octopress/"/>
    <updated>2014-01-06T23:28:42-08:00</updated>
    <id>http://blog.quent.in/blog/2014/01/06/twitter-mention-to-url-convertor-plugin-for-octopress</id>
    <content type="html"><![CDATA[<p>Today i needed to convert a string like <code>"Hello world @quentinrousseau"</code> to an <strong>html</strong> string like with the <strong>Twitter mention</strong> decoded with a real link for <strong>Octopress</strong>.</p>

<p>There is a gem called <strong>twitter_text</strong> who is already doing this stuff available here : <a href="https://github.com/twitter/twitter-text-rb">https://github.com/twitter/twitter-text-rb</a>.</p>

<p>But it was too <strong>overkilled</strong> for my decoding in my case only the mention.</p>

<p>So i developped this little <strong>plugin</strong> for <strong>Octopress</strong> who is doing the stuff well and simple.</p>

<p><strong>Gist</strong> available here : <a href="https://gist.github.com/kwent/8295854">https://gist.github.com/kwent/8295854</a></p>

<p>```ruby</p>

<h1>Title: Twitter mention to url convertor plugin for Octopress</h1>

<h1>Author: Quentin Rousseau <a href="http://quentinrousseau.com">http://quentinrousseau.com</a></h1>

<h1>Description: Convert all twitter mentions with an url.</h1>

<p>#</p>

<h1>Syntax </h1>

<p>#</p>

<h1>Example:</h1>

<h1></h1>

<p>#</p>

<h1>Output:</h1>

<h1><a href="https://twitter.com/quentinrousseau" alt="@quentinrousseau">@quentinrousseau</a></h1>

<p>#</p>

<p>module Jekyll</p>

<p>  class TwitterMentionConvertor &lt; Liquid::Tag</p>

<pre><code>@twitter_base_uri = nil

def initialize(tag_name, markup, tokens)
  super
  @twitter_base_uri = "https://twitter.com/"
end

def render(context)
  "#{context[@markup.strip]}".gsub(/@([a-z0-9_]+)/i) do |mention|
    "&lt;a href=\"#{@twitter_base_uri}#{mention[1..-1]}\" alt=\"#{mention}\"&gt;#{mention}&lt;/a&gt;"
  end
end
</code></pre>

<p>  end</p>

<p>end</p>

<p>Liquid::Template.register_tag(&lsquo;twitter_mention_convertor&rsquo;, Jekyll::TwitterMentionConvertor)
```</p>

<p>Enjoy !</p>

<h2>More&hellip;</h2>

<ul>
<li><a href="https://github.com/twitter/twitter-text-rb">twitter_text Gem</a></li>
<li><a href="https://gist.github.com/kwent/8295854">Gist Code</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
